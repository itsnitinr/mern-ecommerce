[{"/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.actions.js":"1","/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-up/SignupPage.styles.jsx":"2","/home/nitinr/Projects/PCB_website/frontend/src/pages/reset-password/ResetPassword.styles.jsx":"3","/home/nitinr/Projects/PCB_website/frontend/src/pages/landing/LandingPage.styles.jsx":"4","/home/nitinr/Projects/PCB_website/frontend/src/components/hero-carousel/HeroCarousel.component.jsx":"5","/home/nitinr/Projects/PCB_website/frontend/src/components/table-pagination/TablePagination.component.jsx":"6","/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.reducers.js":"7","/home/nitinr/Projects/PCB_website/frontend/src/components/page-header/PageHeader.styles.jsx":"8","/home/nitinr/Projects/PCB_website/frontend/src/components/testimonials/Testimonials.styles.jsx":"9","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/OrderResult.component.jsx":"10","/home/nitinr/Projects/PCB_website/frontend/src/pages/guidelines/GuidelinesPage.component.jsx":"11","/home/nitinr/Projects/PCB_website/frontend/src/components/table-item/TableItem.component.jsx":"12","/home/nitinr/Projects/PCB_website/frontend/src/App.js":"13","/home/nitinr/Projects/PCB_website/frontend/src/theme.js":"14","/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/Navbar.component.jsx":"15","/home/nitinr/Projects/PCB_website/frontend/src/pages/dashboard/DashboardPage.component.jsx":"16","/home/nitinr/Projects/PCB_website/frontend/src/pages/admin-panel-orders/AdminPanelOrders.component.jsx":"17","/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-in/SigninPage.component.jsx":"18","/home/nitinr/Projects/PCB_website/frontend/src/pages/edit-user/EditUserPage.component.jsx":"19","/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/NavItems.js":"20","/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.types.js":"21","/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.types.js":"22","/home/nitinr/Projects/PCB_website/frontend/src/pages/dashboard/Dashboard.styles.jsx":"23","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PCBDetails.component.jsx":"24","/home/nitinr/Projects/PCB_website/frontend/src/components/page-header/PageHeader.component.jsx":"25","/home/nitinr/Projects/PCB_website/frontend/src/components/feature-card/FeatureCard.component.jsx":"26","/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.reducers.js":"27","/home/nitinr/Projects/PCB_website/frontend/src/components/sidebar/Sidebar.styles.jsx":"28","/home/nitinr/Projects/PCB_website/frontend/src/components/google-oauth-button/GoogleOAuthButton.component.jsx":"29","/home/nitinr/Projects/PCB_website/frontend/src/redux/store.js":"30","/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-up/SignupPage.component.jsx":"31","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PlaceOrderPage.component.jsx":"32","/home/nitinr/Projects/PCB_website/frontend/src/pages/verify-account/VerifyAccountPage.component.jsx":"33","/home/nitinr/Projects/PCB_website/frontend/src/pages/forgot-password/ForgotPassword.component.jsx":"34","/home/nitinr/Projects/PCB_website/frontend/src/pages/reset-password/ResetPassword.component.jsx":"35","/home/nitinr/Projects/PCB_website/frontend/src/pages/admin-panel-users/AdminPanelUsers.component.jsx":"36","/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.types.js":"37","/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/Navbar.styles.jsx":"38","/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.actions.js":"39","/home/nitinr/Projects/PCB_website/frontend/src/components/sidebar/Sidebar.component.jsx":"40","/home/nitinr/Projects/PCB_website/frontend/src/components/hero-form/HeroForm.styles.jsx":"41","/home/nitinr/Projects/PCB_website/frontend/src/redux/rootReducer.js":"42","/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.actions.js":"43","/home/nitinr/Projects/PCB_website/frontend/src/pages/order-details/OrderDetails.styles.jsx":"44","/home/nitinr/Projects/PCB_website/frontend/src/components/hero-form/HeroForm.component.jsx":"45","/home/nitinr/Projects/PCB_website/frontend/src/components/feature-card/FeatureCard.styles.jsx":"46","/home/nitinr/Projects/PCB_website/frontend/src/pages/forgot-password/ForgotPassword.styles.jsx":"47","/home/nitinr/Projects/PCB_website/frontend/src/index.js":"48","/home/nitinr/Projects/PCB_website/frontend/src/components/notifier/Notifier.component.jsx":"49","/home/nitinr/Projects/PCB_website/frontend/src/pages/order-details/OrderDetailsPage.component.jsx":"50","/home/nitinr/Projects/PCB_website/frontend/src/pages/edit-user/EditUserPage.styles.jsx":"51","/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.reducers.js":"52","/home/nitinr/Projects/PCB_website/frontend/src/pages/landing/LandingPage.component.jsx":"53","/home/nitinr/Projects/PCB_website/frontend/src/components/testimonials/Testimonials.component.jsx":"54","/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-in/SigninPage.sytles.jsx":"55","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/GerberUpload.component.jsx":"56","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PlaceOrderPage.styles.jsx":"57","/home/nitinr/Projects/PCB_website/frontend/src/components/hero-carousel/HeroCarousel.styles.jsx":"58","/home/nitinr/Projects/PCB_website/frontend/src/components/footer/Footer.component.jsx":"59","/home/nitinr/Projects/PCB_website/frontend/src/components/footer/Footer.styles.jsx":"60","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/BillingDetails.component.jsx":"61","/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/ShippingDetails.component.jsx":"62","/home/nitinr/Projects/PCB_website/frontend/src/utils/region.js":"63","/home/nitinr/Projects/PCB_website/frontend/src/pages/about/AboutPage.component.jsx":"64","/home/nitinr/Projects/PCB_website/frontend/src/pages/about/AboutPage.styles.jsx":"65","/home/nitinr/Projects/PCB_website/frontend/src/pages/gallery/GalleryPage.component.jsx":"66","/home/nitinr/Projects/PCB_website/frontend/src/pages/gallery/GalleryPage.data.js":"67","/home/nitinr/Projects/PCB_website/frontend/src/components/terms-modal/TermsModal.component.jsx":"68","/home/nitinr/Projects/PCB_website/frontend/src/components/privacy-modal/PrivacyModal.component.jsx":"69","/home/nitinr/Projects/PCB_website/frontend/src/components/privacy-modal/PrivacyModal.styles.jsx":"70","/home/nitinr/Projects/PCB_website/frontend/src/components/terms-modal/TermsModal.styles.jsx":"71","/home/nitinr/Projects/PCB_website/frontend/src/pages/privacy/PrivacyPage.component.jsx":"72","/home/nitinr/Projects/PCB_website/frontend/src/pages/terms/TermsPage.component.jsx":"73"},{"size":578,"mtime":1610887964727,"results":"74","hashOfConfig":"75"},{"size":807,"mtime":1616336538534,"results":"76","hashOfConfig":"75"},{"size":585,"mtime":1611308819134,"results":"77","hashOfConfig":"75"},{"size":1882,"mtime":1613840439946,"results":"78","hashOfConfig":"75"},{"size":2222,"mtime":1615915191490,"results":"79","hashOfConfig":"75"},{"size":2029,"mtime":1611755761490,"results":"80","hashOfConfig":"75"},{"size":3321,"mtime":1612008339293,"results":"81","hashOfConfig":"75"},{"size":757,"mtime":1611743737697,"results":"82","hashOfConfig":"75"},{"size":1306,"mtime":1616776056811,"results":"83","hashOfConfig":"75"},{"size":3151,"mtime":1612020319650,"results":"84","hashOfConfig":"75"},{"size":6886,"mtime":1615915191540,"results":"85","hashOfConfig":"75"},{"size":800,"mtime":1615915191514,"results":"86","hashOfConfig":"75"},{"size":4239,"mtime":1616776056664,"results":"87","hashOfConfig":"75"},{"size":334,"mtime":1613840902419,"results":"88","hashOfConfig":"75"},{"size":6995,"mtime":1616620809248,"results":"89","hashOfConfig":"75"},{"size":27158,"mtime":1616619139961,"results":"90","hashOfConfig":"75"},{"size":9362,"mtime":1614094309827,"results":"91","hashOfConfig":"75"},{"size":4408,"mtime":1616619723808,"results":"92","hashOfConfig":"75"},{"size":4338,"mtime":1613840902416,"results":"93","hashOfConfig":"75"},{"size":2832,"mtime":1616776056774,"results":"94","hashOfConfig":"75"},{"size":1904,"mtime":1612202161567,"results":"95","hashOfConfig":"75"},{"size":1544,"mtime":1613840439949,"results":"96","hashOfConfig":"75"},{"size":804,"mtime":1613840439936,"results":"97","hashOfConfig":"75"},{"size":12868,"mtime":1614092619187,"results":"98","hashOfConfig":"75"},{"size":486,"mtime":1611311180994,"results":"99","hashOfConfig":"75"},{"size":504,"mtime":1611068728205,"results":"100","hashOfConfig":"75"},{"size":985,"mtime":1610887979390,"results":"101","hashOfConfig":"75"},{"size":624,"mtime":1615299147667,"results":"102","hashOfConfig":"75"},{"size":1178,"mtime":1616776056767,"results":"103","hashOfConfig":"75"},{"size":908,"mtime":1613840439956,"results":"104","hashOfConfig":"75"},{"size":8243,"mtime":1616620046514,"results":"105","hashOfConfig":"75"},{"size":9310,"mtime":1616170488490,"results":"106","hashOfConfig":"75"},{"size":889,"mtime":1611918857037,"results":"107","hashOfConfig":"75"},{"size":2272,"mtime":1613658013353,"results":"108","hashOfConfig":"75"},{"size":5037,"mtime":1613580657647,"results":"109","hashOfConfig":"75"},{"size":4292,"mtime":1615915191540,"results":"110","hashOfConfig":"75"},{"size":150,"mtime":1610887945984,"results":"111","hashOfConfig":"75"},{"size":1267,"mtime":1614092619184,"results":"112","hashOfConfig":"75"},{"size":9638,"mtime":1613840439959,"results":"113","hashOfConfig":"75"},{"size":3964,"mtime":1615915191514,"results":"114","hashOfConfig":"75"},{"size":653,"mtime":1613840902412,"results":"115","hashOfConfig":"75"},{"size":1098,"mtime":1613840439956,"results":"116","hashOfConfig":"75"},{"size":6396,"mtime":1613840439949,"results":"117","hashOfConfig":"75"},{"size":610,"mtime":1613840902416,"results":"118","hashOfConfig":"75"},{"size":3821,"mtime":1616776056774,"results":"119","hashOfConfig":"75"},{"size":667,"mtime":1611069862771,"results":"120","hashOfConfig":"75"},{"size":517,"mtime":1611307664124,"results":"121","hashOfConfig":"75"},{"size":141,"mtime":1610869899710,"results":"122","hashOfConfig":"75"},{"size":1629,"mtime":1610888404947,"results":"123","hashOfConfig":"75"},{"size":19229,"mtime":1616335931454,"results":"124","hashOfConfig":"75"},{"size":537,"mtime":1612007920427,"results":"125","hashOfConfig":"75"},{"size":3330,"mtime":1613840439949,"results":"126","hashOfConfig":"75"},{"size":4786,"mtime":1615571260283,"results":"127","hashOfConfig":"75"},{"size":4418,"mtime":1615915191517,"results":"128","hashOfConfig":"75"},{"size":720,"mtime":1615915191540,"results":"129","hashOfConfig":"75"},{"size":3071,"mtime":1613840902416,"results":"130","hashOfConfig":"75"},{"size":331,"mtime":1611565049569,"results":"131","hashOfConfig":"75"},{"size":1818,"mtime":1616776056774,"results":"132","hashOfConfig":"75"},{"size":6127,"mtime":1616776056744,"results":"133","hashOfConfig":"75"},{"size":2428,"mtime":1616776056757,"results":"134","hashOfConfig":"75"},{"size":5497,"mtime":1616776056814,"results":"135","hashOfConfig":"75"},{"size":4952,"mtime":1616618985004,"results":"136","hashOfConfig":"75"},{"size":24791,"mtime":1613840439969,"results":"137","hashOfConfig":"75"},{"size":7551,"mtime":1615915191520,"results":"138","hashOfConfig":"75"},{"size":1206,"mtime":1615915191520,"results":"139","hashOfConfig":"75"},{"size":968,"mtime":1613840439946,"results":"140","hashOfConfig":"75"},{"size":768,"mtime":1615571260283,"results":"141","hashOfConfig":"75"},{"size":12362,"mtime":1616338914877,"results":"142","hashOfConfig":"75"},{"size":9023,"mtime":1616339154780,"results":"143","hashOfConfig":"75"},{"size":539,"mtime":1616339067127,"results":"144","hashOfConfig":"75"},{"size":539,"mtime":1616338840184,"results":"145","hashOfConfig":"75"},{"size":9577,"mtime":1616776056817,"results":"146","hashOfConfig":"75"},{"size":13072,"mtime":1616704316755,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"105dcm5",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"183"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"150"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.actions.js",[],["309","310"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-up/SignupPage.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/reset-password/ResetPassword.styles.jsx",[],["311","312"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/landing/LandingPage.styles.jsx",[],["313","314"],"/home/nitinr/Projects/PCB_website/frontend/src/components/hero-carousel/HeroCarousel.component.jsx",[],["315","316"],"/home/nitinr/Projects/PCB_website/frontend/src/components/table-pagination/TablePagination.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.reducers.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/page-header/PageHeader.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/testimonials/Testimonials.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/OrderResult.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/guidelines/GuidelinesPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/table-item/TableItem.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/App.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/theme.js",[],["317","318"],"/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/Navbar.component.jsx",[],["319","320"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/dashboard/DashboardPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/admin-panel-orders/AdminPanelOrders.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-in/SigninPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/edit-user/EditUserPage.component.jsx",["321"],"import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport useStyles from './EditUserPage.styles';\n\nimport { getUserDetails, updateUser } from '../../redux/user/user.actions';\nimport { USER_UPDATE_RESET } from '../../redux/user/user.types';\n\nexport default function EditUserPage({ match, history }) {\n  const userId = match.params.id;\n\n  const classes = useStyles();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const { user } = useSelector((state) => state.userLogin);\n  const { loading, userDetails } = useSelector((state) => state.userDetails);\n  const { success } = useSelector((state) => state.userEdit);\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  const superAdmins = process.env.REACT_APP_SUPER_ADMIN_IDS.split(', ');\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    if (!user || !superAdmins.find((superAdmin) => superAdmin === user._id)) {\n      history.push('/signin');\n    }\n    if (success) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/users');\n    } else {\n      if (!userDetails || userDetails._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(userDetails.name);\n        setEmail(userDetails.email);\n        setIsAdmin(userDetails.isAdmin);\n      }\n    }\n  }, [history, user, userDetails, userId, dispatch, success]);\n\n  return (\n    <>\n      {loading && <LinearProgress color=\"secondary\" />}\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Edit User\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => onFormSubmit(e)}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Full Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={isAdmin}\n                      onChange={(e) => setIsAdmin(e.target.checked)}\n                      name=\"isAdmin\"\n                    />\n                  }\n                  label=\"Is Admin?\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={user && userDetails && userDetails._id === user._id}\n            >\n              Edit User\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n}\n","/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/NavItems.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.types.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.types.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/dashboard/Dashboard.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PCBDetails.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/page-header/PageHeader.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/feature-card/FeatureCard.component.jsx",[],["322","323"],"/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.reducers.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/sidebar/Sidebar.styles.jsx",[],["324","325"],"/home/nitinr/Projects/PCB_website/frontend/src/components/google-oauth-button/GoogleOAuthButton.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/store.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-up/SignupPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PlaceOrderPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/verify-account/VerifyAccountPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/forgot-password/ForgotPassword.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/reset-password/ResetPassword.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/admin-panel-users/AdminPanelUsers.component.jsx",["326"],"import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Container,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n  Button,\n  TableContainer,\n  LinearProgress,\n  TableFooter,\n  TablePagination,\n} from '@material-ui/core';\nimport { Check, Clear } from '@material-ui/icons';\nimport PageHeader from '../../components/page-header/PageHeader.component';\nimport TablePaginationActions from '../../components/table-pagination/TablePagination.component';\n\nimport { getAllUsers } from '../../redux/user/user.actions';\n\nconst AdminPanelUsers = ({ history }) => {\n  const { users, loading } = useSelector((state) => state.userList);\n  const { user } = useSelector((state) => state.userLogin);\n\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const superAdmins = process.env.REACT_APP_SUPER_ADMIN_IDS.split(', ');\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    if (user && superAdmins.find((superAdmin) => superAdmin === user._id)) {\n      dispatch(getAllUsers());\n    } else {\n      history.push('/signin');\n    }\n  }, [dispatch, history, user]);\n\n  return (\n    <>\n      <PageHeader title=\"Admin Panel\" subtitle=\"Users\" />\n      <Container>\n        <Typography variant=\"h4\" color=\"secondary\">\n          Manage Users\n        </Typography>\n        {loading ? (\n          <LinearProgress />\n        ) : (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <b>ID</b>\n                  </TableCell>\n                  <TableCell>\n                    <b>Name</b>\n                  </TableCell>\n                  <TableCell>\n                    <b>Email</b>\n                  </TableCell>\n                  <TableCell>\n                    <b>Is Admin?</b>\n                  </TableCell>\n                  <TableCell>\n                    <b>Actions</b>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {(rowsPerPage > 0\n                  ? users.slice(\n                      page * rowsPerPage,\n                      page * rowsPerPage + rowsPerPage\n                    )\n                  : users\n                ).map((user) => (\n                  <TableRow key={user._id}>\n                    <TableCell>{user._id}</TableCell>\n                    <TableCell>{user.name}</TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      {user.isAdmin ? <Check /> : <Clear />}\n                    </TableCell>\n                    <TableCell>\n                      <Link to={`/admin/users/${user._id}`}>\n                        <Button variant=\"contained\" color=\"primary\">\n                          Edit\n                        </Button>\n                      </Link>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    rowsPerPageOptions={[\n                      5,\n                      10,\n                      25,\n                      { label: 'All', value: -1 },\n                    ]}\n                    colSpan={3}\n                    count={users.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    SelectProps={{\n                      inputProps: { 'aria-label': 'rows per page' },\n                      native: true,\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    ActionsComponent={TablePaginationActions}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default AdminPanelUsers;\n","/home/nitinr/Projects/PCB_website/frontend/src/redux/alert/alert.types.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/navbar/Navbar.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/user/user.actions.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/sidebar/Sidebar.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/hero-form/HeroForm.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/rootReducer.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.actions.js",[],["327","328"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/order-details/OrderDetails.styles.jsx",[],["329","330"],"/home/nitinr/Projects/PCB_website/frontend/src/components/hero-form/HeroForm.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/feature-card/FeatureCard.styles.jsx",[],["331","332"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/forgot-password/ForgotPassword.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/index.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/notifier/Notifier.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/order-details/OrderDetailsPage.component.jsx",["333","334"],"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  Container,\n  Typography,\n  LinearProgress,\n  Button,\n  Card,\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n} from '@material-ui/core';\nimport { Check, Clear, CloudDownload } from '@material-ui/icons';\n\nimport PageHeader from '../../components/page-header/PageHeader.component';\nimport {\n  getOrderDetails,\n  reviewOrder,\n  payOrder,\n  dispatchOrder,\n} from '../../redux/order/order.actions';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DISPATCH_RESET,\n} from '../../redux/order/order.types';\nimport logo from '../../assets/PCBCUPIDlogotext.svg';\nimport useStyles from './OrderDetails.styles';\n\nfunction loadRazorpay() {\n  return new Promise((resolve) => {\n    const script = document.createElement('script');\n    script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n    document.body.appendChild(script);\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n  });\n}\n\nconst OrderDetailsPage = ({ history }) => {\n  const orderId = useParams().id;\n\n  const { user } = useSelector((state) => state.userLogin);\n  const { order, loading } = useSelector((state) => state.orderDetails);\n  const { success } = useSelector((state) => state.orderPay);\n  const { success: dispatchSuccess } = useSelector(\n    (state) => state.orderDispatch\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user) {\n      history.push('/signin');\n    } else {\n      if (success) {\n        dispatch({ type: ORDER_PAY_RESET });\n      }\n      if (dispatchSuccess) {\n        dispatch({ type: ORDER_DISPATCH_RESET });\n      }\n      dispatch(getOrderDetails(orderId));\n      if (order.user && order.user._id !== user._id && !user.isAdmin) {\n        history.push('/');\n      }\n      setAdjustedPrice(order.orderPrice);\n    }\n  }, [\n    dispatch,\n    order.orderPrice,\n    order.user && order.user._id,\n    orderId,\n    user,\n    history,\n    success,\n    dispatchSuccess,\n  ]);\n\n  const classes = useStyles();\n\n  async function displayRazorpay() {\n    const res = await loadRazorpay();\n    if (!res) {\n      alert('Razorpay SDK failed to load. Are you online?');\n      return;\n    }\n\n    const options = {\n      key: process.env.RAZORPAY_KEY_ID,\n      currency: 'INR',\n      name: 'PCB Cupid',\n      description: 'PCB Order Payment',\n      image: logo,\n      order_id: `${order.razorpayOrderId}`,\n      handler: function (response) {\n        dispatch(\n          payOrder(\n            orderId,\n            response.razorpay_payment_id,\n            response.razorpay_signature\n          )\n        );\n      },\n      prefill: {\n        name: user.name,\n        email: user.email,\n      },\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n  }\n\n  const [adjustedPrice, setAdjustedPrice] = useState('');\n  const [logisticsPartner, setLogisticsPartner] = useState('');\n  const [trackingId, setTrackingId] = useState('');\n\n  const onDispatchSubmit = (e) => {\n    e.preventDefault();\n    dispatch(dispatchOrder(orderId, logisticsPartner, trackingId));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Order Details\" subtitle={`Order no: ${orderId}`} />\n      {loading ? (\n        <LinearProgress color=\"secondary\" />\n      ) : (\n        <Container>\n          <Grid container>\n            <Grid item sm={8} xs={12}>\n              <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n                Order Details\n              </Typography>\n              <Table className={classes.tableContainer}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <b>Specification</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>Value</b>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Gerber File</TableCell>\n                    <TableCell>\n                      <a href={order.gerberFileUrl}>\n                        <Button\n                          startIcon={<CloudDownload />}\n                          variant=\"contained\"\n                          color=\"primary\"\n                        >\n                          Download Gerber File\n                        </Button>\n                      </a>\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Layers</TableCell>\n                    <TableCell>{order.pcbDetails.layers}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Dimensions</TableCell>\n                    <TableCell>\n                      Width: {order.pcbDetails.dimensions.x} mm, Length:{' '}\n                      {order.pcbDetails.dimensions.y} mm\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Quantity</TableCell>\n                    <TableCell>{order.pcbDetails.quantity}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Thickness</TableCell>\n                    <TableCell>{order.pcbDetails.thickness}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Color</TableCell>\n                    <TableCell>\n                      {order.pcbDetails.color.charAt(0).toUpperCase() +\n                        order.pcbDetails.color.slice(1)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Surface Finish</TableCell>\n                    <TableCell>{order.pcbDetails.surfaceFinish}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Copper Weight</TableCell>\n                    <TableCell>{order.pcbDetails.copperWeight} µm</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Gold Fingers</TableCell>\n                    <TableCell>\n                      {order.pcbDetails.goldFinger ? 'Yes' : 'No'}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Flying Probe Test</TableCell>\n                    <TableCell>\n                      {order.pcbDetails.flyingProbeTest ? 'Yes' : 'No'}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Castellated Holes</TableCell>\n                    <TableCell>\n                      {order.pcbDetails.castellatedHoles ? 'Yes' : 'No'}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              {order.pcbDetails.remarks && (\n                <Typography className={classes.remark}>\n                  <b>Remark:</b> {order.pcbDetails.remarks}\n                </Typography>\n              )}\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n                Order Tracking\n              </Typography>\n              <TableContainer\n                component={Card}\n                style={{ marginBottom: '1.5rem' }}\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>\n                        <b>Detail</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Status</b>\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell scope=\"row\">Review</TableCell>\n                      <TableCell>\n                        {order.underReview\n                          ? 'Under Review'\n                          : order.reviewPassed\n                          ? 'Passed'\n                          : 'Failed'}\n                      </TableCell>\n                    </TableRow>\n                    {user && user.isAdmin && !order.underReview && (\n                      <TableRow>\n                        <TableCell scope=\"row\">Reviewed By</TableCell>\n                        <TableCell>{order.reviewedBy.name}</TableCell>\n                      </TableRow>\n                    )}\n                    <TableRow>\n                      <TableCell scope=\"row\">Paid</TableCell>\n                      <TableCell>\n                        {order.isPaid || success ? (\n                          <div\n                            style={{ display: 'flex', alignItems: 'center' }}\n                          >\n                            <Check className={classes.checkIcon} />\n                            {order.paidAt && order.paidAt.substring(0, 10)}\n                          </div>\n                        ) : (\n                          <Clear className={classes.clearIcon} />\n                        )}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell scope=\"row\">Dispatched</TableCell>\n                      <TableCell>\n                        {order.isDispatched ? (\n                          <div\n                            style={{ display: 'flex', alignItems: 'center' }}\n                          >\n                            <Check className={classes.checkIcon} />\n                            {order.dispatchedAt &&\n                              order.dispatchedAt.substring(0, 10)}\n                          </div>\n                        ) : (\n                          <Clear className={classes.clearIcon} />\n                        )}\n                      </TableCell>\n                    </TableRow>\n                    {order.logisticsPartner && (\n                      <TableRow>\n                        <TableCell scope=\"row\">Logistics Partner</TableCell>\n                        <TableCell>{order.logisticsPartner}</TableCell>\n                      </TableRow>\n                    )}\n                    {order.trackingId && (\n                      <TableRow>\n                        <TableCell scope=\"row\">Tracking ID</TableCell>\n                        <TableCell>{order.trackingId}</TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n                {user && user.isAdmin && !order.isPaid && order.underReview ? (\n                  <>\n                    <TextField\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      value={adjustedPrice}\n                      onChange={(e) => setAdjustedPrice(e.target.value)}\n                      label=\"Adjusted Price\"\n                      fullWidth\n                      required\n                    />\n                    <Button\n                      style={{ width: '50%', borderRadius: 0 }}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() =>\n                        dispatch(\n                          reviewOrder(order._id, true, adjustedPrice, user._id)\n                        )\n                      }\n                    >\n                      Approve\n                    </Button>\n                    <Button\n                      style={{\n                        width: '50%',\n                        background: '#f44336',\n                        color: 'white',\n                        borderRadius: 0,\n                      }}\n                      variant=\"contained\"\n                      onClick={() =>\n                        dispatch(\n                          reviewOrder(order._id, false, adjustedPrice, user._id)\n                        )\n                      }\n                    >\n                      Reject\n                    </Button>\n                  </>\n                ) : user &&\n                  user.isAdmin &&\n                  order.reviewPassed &&\n                  order.isPaid &&\n                  !order.isDispatched ? (\n                  <form onSubmit={onDispatchSubmit}>\n                    <TextField\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      value={logisticsPartner}\n                      onChange={(e) => setLogisticsPartner(e.target.value)}\n                      label=\"Logistics Partner\"\n                      fullWidth\n                      required\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      value={trackingId}\n                      onChange={(e) => setTrackingId(e.target.value)}\n                      label=\"Tracking ID\"\n                      fullWidth\n                      required\n                    />\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                      fullWidth\n                      required\n                    >\n                      Mark as Dispatched\n                    </Button>\n                  </form>\n                ) : (\n                  user &&\n                  !user.isAdmin &&\n                  !order.isPaid && (\n                    <Button\n                      disabled={order.underReview || !order.reviewPassed}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={displayRazorpay}\n                      fullWidth\n                    >\n                      Pay\n                    </Button>\n                  )\n                )}\n              </TableContainer>\n              <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n                Cost Breakdown\n              </Typography>\n              <TableContainer\n                style={{ marginBottom: '1.5rem' }}\n                component={Card}\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>\n                        <b>Cost Type</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Price</b>\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell scope=\"row\">\n                        {!order.underReview ? 'PCB Cost' : 'Estimated PCB Cost'}\n                      </TableCell>\n                      <TableCell>\n                        ₹{' '}\n                        {order.isAdjusted ? (\n                          <>\n                            <s>{order.orderPrice}</s>\n                            <b> {order.adjustedPrice}</b>\n                          </>\n                        ) : (\n                          order.orderPrice\n                        )}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell scope=\"row\">\n                        {!order.underReview ? 'Tax' : 'Estimated Tax'}\n                      </TableCell>\n                      <TableCell>\n                        ₹{' '}\n                        {order.isAdjusted ? (\n                          <>\n                            <s>{order.taxPrice}</s>\n                            <b> {order.adjustedTax}</b>\n                          </>\n                        ) : (\n                          order.taxPrice\n                        )}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell scope=\"row\">Shipping</TableCell>\n                      <TableCell>₹ {order.shippingPrice}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell scope=\"row\">\n                        <b>\n                          {!order.underReview && !order.isAdjusted\n                            ? 'Total Cost'\n                            : 'Estimated Total Cost'}\n                        </b>\n                      </TableCell>\n                      <TableCell>\n                        <b>\n                          ₹{' '}\n                          {order.isAdjusted ? (\n                            <s>{order.totalPrice}</s>\n                          ) : (\n                            order.totalPrice\n                          )}\n                        </b>\n                      </TableCell>\n                    </TableRow>\n                    {order.isAdjusted && (\n                      <TableRow>\n                        <TableCell scope=\"row\">\n                          <b>Adjusted Total Cost</b>\n                        </TableCell>\n                        <TableCell>\n                          <b>₹ {order.adjustedTotal}</b>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n                User Details\n              </Typography>\n              <TableContainer\n                component={Card}\n                className={classes.tableContainer}\n              >\n                <Table>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>{order.user.name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Email Address</TableCell>\n                    <TableCell>{order.user.email}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Billing Address</TableCell>\n                    <TableCell>\n                      {order.billingDetails.addressLine1},{' '}\n                      {order.billingDetails.addressLine2},{' '}\n                      {order.billingDetails.city}, {order.billingDetails.state},{' '}\n                      {order.billingDetails.pincode}\n                      <br />\n                      Phone: {order.billingDetails.phoneNumber}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Shipping Address</TableCell>\n                    <TableCell>\n                      {order.shippingDetails.addressLine1},{' '}\n                      {order.shippingDetails.addressLine2},{' '}\n                      {order.shippingDetails.city},{' '}\n                      {order.shippingDetails.state},{' '}\n                      {order.shippingDetails.pincode}\n                      <br />\n                      Phone: {order.shippingDetails.phoneNumber}\n                    </TableCell>\n                  </TableRow>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default OrderDetailsPage;\n","/home/nitinr/Projects/PCB_website/frontend/src/pages/edit-user/EditUserPage.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/redux/order/order.reducers.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/landing/LandingPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/testimonials/Testimonials.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/sign-in/SigninPage.sytles.jsx",[],["335","336"],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/GerberUpload.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/PlaceOrderPage.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/hero-carousel/HeroCarousel.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/footer/Footer.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/footer/Footer.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/BillingDetails.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/place-order/ShippingDetails.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/utils/region.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/about/AboutPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/about/AboutPage.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/gallery/GalleryPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/gallery/GalleryPage.data.js",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/terms-modal/TermsModal.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/privacy-modal/PrivacyModal.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/privacy-modal/PrivacyModal.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/components/terms-modal/TermsModal.styles.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/privacy/PrivacyPage.component.jsx",[],"/home/nitinr/Projects/PCB_website/frontend/src/pages/terms/TermsPage.component.jsx",[],{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"337","replacedBy":"341"},{"ruleId":"339","replacedBy":"342"},{"ruleId":"337","replacedBy":"343"},{"ruleId":"339","replacedBy":"344"},{"ruleId":"337","replacedBy":"345"},{"ruleId":"339","replacedBy":"346"},{"ruleId":"337","replacedBy":"347"},{"ruleId":"339","replacedBy":"348"},{"ruleId":"337","replacedBy":"349"},{"ruleId":"339","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":58,"column":6,"nodeType":"353","endLine":58,"endColumn":61,"suggestions":"354"},{"ruleId":"337","replacedBy":"355"},{"ruleId":"339","replacedBy":"356"},{"ruleId":"337","replacedBy":"357"},{"ruleId":"339","replacedBy":"358"},{"ruleId":"351","severity":1,"message":"352","line":51,"column":6,"nodeType":"353","endLine":51,"endColumn":31,"suggestions":"359"},{"ruleId":"337","replacedBy":"360"},{"ruleId":"339","replacedBy":"361"},{"ruleId":"337","replacedBy":"362"},{"ruleId":"339","replacedBy":"363"},{"ruleId":"337","replacedBy":"364"},{"ruleId":"339","replacedBy":"365"},{"ruleId":"351","severity":1,"message":"366","line":77,"column":6,"nodeType":"353","endLine":86,"endColumn":4,"suggestions":"367"},{"ruleId":"351","severity":1,"message":"368","line":80,"column":5,"nodeType":"369","endLine":80,"endColumn":33},{"ruleId":"337","replacedBy":"370"},{"ruleId":"339","replacedBy":"371"},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],["372"],["373"],["372"],["373"],["372"],["373"],["372"],["373"],["372"],["373"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'superAdmins'. Either include it or remove the dependency array.","ArrayExpression",["374"],["372"],["373"],["372"],["373"],["375"],["372"],["373"],["372"],["373"],["372"],["373"],"React Hook useEffect has a missing dependency: 'order.user'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression",["372"],["373"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},"Update the dependencies array to be: [history, user, userDetails, userId, dispatch, success, superAdmins]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, history, superAdmins, user]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, order.orderPrice, orderId, user, history, success, dispatchSuccess, order.user]",{"range":"387","text":"388"},[2112,2167],"[history, user, userDetails, userId, dispatch, success, superAdmins]",[1424,1449],"[dispatch, history, superAdmins, user]",[1985,2130],"[dispatch, order.orderPrice, orderId, user, history, success, dispatchSuccess, order.user]"]